# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'f:\code\python\SemanticSegmentation\autogis\function\axis_trans\axisTrans.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1194, 803)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setMinimumSize(QtCore.QSize(960, 640))
        self.label.setMouseTracking(False)
        self.label.setTabletTracking(False)
        self.label.setAutoFillBackground(True)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/pic/resource/background.jpg"))
        # self.label.setScaledContents(True)
        self.label.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label.setObjectName("label")
        self.horizontalLayout.addWidget(self.label)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setMinimumSize(QtCore.QSize(190, 0))
        self.widget.setMaximumSize(QtCore.QSize(190, 16777215))
        self.widget.setObjectName("widget")
        self.pushButton_offsetCalc = QtWidgets.QPushButton(self.widget)
        self.pushButton_offsetCalc.setGeometry(QtCore.QRect(20, 570, 131, 41))
        self.pushButton_offsetCalc.setObjectName("pushButton_offsetCalc")
        self.pushButton_extrateVillage = QtWidgets.QPushButton(self.widget)
        self.pushButton_extrateVillage.setGeometry(QtCore.QRect(20, 220, 131, 41))
        self.pushButton_extrateVillage.setObjectName("pushButton_extrateVillage")
        self.pushButton_medax = QtWidgets.QPushButton(self.widget)
        self.pushButton_medax.setGeometry(QtCore.QRect(20, 290, 131, 41))
        self.pushButton_medax.setObjectName("pushButton_medax")
        self.pushButton_ori = QtWidgets.QPushButton(self.widget)
        self.pushButton_ori.setGeometry(QtCore.QRect(20, 80, 131, 41))
        self.pushButton_ori.setObjectName("pushButton_ori")
        self.pushButton_drawOutline = QtWidgets.QPushButton(self.widget)
        self.pushButton_drawOutline.setGeometry(QtCore.QRect(20, 150, 131, 41))
        self.pushButton_drawOutline.setObjectName("pushButton_drawOutline")
        self.pushButton_drawRoad = QtWidgets.QPushButton(self.widget)
        self.pushButton_drawRoad.setGeometry(QtCore.QRect(20, 500, 131, 41))
        self.pushButton_drawRoad.setObjectName("pushButton_drawRoad")
        self.pushButton_sk2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_sk2.setGeometry(QtCore.QRect(20, 430, 131, 41))
        self.pushButton_sk2.setObjectName("pushButton_sk2")
        self.pushButton_sk1 = QtWidgets.QPushButton(self.widget)
        self.pushButton_sk1.setGeometry(QtCore.QRect(20, 360, 131, 41))
        self.pushButton_sk1.setObjectName("pushButton_sk1")
        self.horizontalLayout.addWidget(self.widget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1194, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        self.menu_2 = QtWidgets.QMenu(self.menubar)
        self.menu_2.setObjectName("menu_2")
        self.menu_3 = QtWidgets.QMenu(self.menubar)
        self.menu_3.setObjectName("menu_3")
        self.menu_4 = QtWidgets.QMenu(self.menubar)
        self.menu_4.setObjectName("menu_4")
        self.menu_I = QtWidgets.QMenu(self.menubar)
        self.menu_I.setObjectName("menu_I")
        self.menu_5 = QtWidgets.QMenu(self.menu_I)
        self.menu_5.setObjectName("menu_5")
        self.menu_W = QtWidgets.QMenu(self.menubar)
        self.menu_W.setObjectName("menu_W")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_openfile = QtWidgets.QAction(MainWindow)
        self.action_openfile.setObjectName("action_openfile")
        self.action_openmask = QtWidgets.QAction(MainWindow)
        self.action_openmask.setObjectName("action_openmask")
        self.action_cleanOutline = QtWidgets.QAction(MainWindow)
        self.action_cleanOutline.setObjectName("action_cleanOutline")
        self.action_openOutline = QtWidgets.QAction(MainWindow)
        self.action_openOutline.setObjectName("action_openOutline")
        self.action_saveImg = QtWidgets.QAction(MainWindow)
        self.action_saveImg.setObjectName("action_saveImg")
        self.action_quit = QtWidgets.QAction(MainWindow)
        self.action_quit.setObjectName("action_quit")
        self.action_cleanImg = QtWidgets.QAction(MainWindow)
        self.action_cleanImg.setObjectName("action_cleanImg")
        self.action_extractColor = QtWidgets.QAction(MainWindow)
        self.action_extractColor.setObjectName("action_extractColor")
        self.action_addDem = QtWidgets.QAction(MainWindow)
        self.action_addDem.setObjectName("action_addDem")
        self.action_slope = QtWidgets.QAction(MainWindow)
        self.action_slope.setObjectName("action_slope")
        self.action_curvature = QtWidgets.QAction(MainWindow)
        self.action_curvature.setObjectName("action_curvature")
        self.action_parameters = QtWidgets.QAction(MainWindow)
        self.action_parameters.setObjectName("action_parameters")
        self.action_slopeDivide = QtWidgets.QAction(MainWindow)
        self.action_slopeDivide.setObjectName("action_slopeDivide")
        self.menu.addAction(self.action_openfile)
        self.menu.addAction(self.action_openOutline)
        self.menu.addAction(self.action_addDem)
        self.menu.addSeparator()
        self.menu.addAction(self.action_saveImg)
        self.menu.addSeparator()
        self.menu.addAction(self.action_quit)
        self.menu_2.addAction(self.action_cleanImg)
        self.menu_2.addAction(self.action_cleanOutline)
        self.menu_2.addAction(self.action_parameters)
        self.menu_5.addAction(self.action_slope)
        self.menu_5.addAction(self.action_curvature)
        self.menu_5.addAction(self.action_slopeDivide)
        self.menu_I.addAction(self.menu_5.menuAction())
        self.menu_I.addAction(self.action_extractColor)
        self.menubar.addAction(self.menu.menuAction())
        self.menubar.addAction(self.menu_2.menuAction())
        self.menubar.addAction(self.menu_I.menuAction())
        self.menubar.addAction(self.menu_3.menuAction())
        self.menubar.addAction(self.menu_W.menuAction())
        self.menubar.addAction(self.menu_4.menuAction())

        self.retranslateUi(MainWindow)
        self.pushButton_ori.clicked.connect(MainWindow.show_oriImg)
        self.pushButton_medax.clicked.connect(MainWindow.medaxis)
        self.pushButton_sk1.clicked.connect(MainWindow.skletonize1)
        self.pushButton_sk2.clicked.connect(MainWindow.skletonize2)
        self.pushButton_drawOutline.clicked.connect(MainWindow.draw_outline)
        self.pushButton_extrateVillage.clicked.connect(MainWindow.extract_village)
        self.action_openfile.triggered.connect(MainWindow.open_file)
        self.action_cleanOutline.triggered.connect(MainWindow.cleanLine)
        self.pushButton_drawRoad.clicked.connect(MainWindow.drow_road)
        self.pushButton_offsetCalc.clicked.connect(MainWindow.offset_calculate)
        self.action_openOutline.triggered.connect(MainWindow.openOutline)
        self.action_cleanImg.triggered.connect(MainWindow.cleanImg)
        self.action_extractColor.triggered.connect(MainWindow.extractColor)
        self.action_quit.triggered.connect(MainWindow.quit)
        self.action_saveImg.triggered.connect(MainWindow.saveImg)
        self.action_parameters.triggered.connect(MainWindow.paraSetting)
        self.action_addDem.triggered.connect(MainWindow.add_elevationData)
        self.action_curvature.triggered.connect(MainWindow.calCurvature)
        self.action_slopeDivide.triggered.connect(MainWindow.slopeDivide)
        self.action_slope.triggered.connect(MainWindow.calSlope)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_offsetCalc.setText(_translate("MainWindow", "偏移计算"))
        self.pushButton_extrateVillage.setText(_translate("MainWindow", "提取村落"))
        self.pushButton_medax.setText(_translate("MainWindow", "骨架提取1"))
        self.pushButton_ori.setText(_translate("MainWindow", "原图"))
        self.pushButton_drawOutline.setText(_translate("MainWindow", "边界勾勒"))
        self.pushButton_drawRoad.setText(_translate("MainWindow", "道路绘制"))
        self.pushButton_sk2.setText(_translate("MainWindow", "骨架提取3"))
        self.pushButton_sk1.setText(_translate("MainWindow", "骨架提取2"))
        self.menu.setTitle(_translate("MainWindow", "文件(F)"))
        self.menu_2.setTitle(_translate("MainWindow", "编辑(E)"))
        self.menu_3.setTitle(_translate("MainWindow", "视图(V)"))
        self.menu_4.setTitle(_translate("MainWindow", "帮助(H)"))
        self.menu_I.setTitle(_translate("MainWindow", "图像(I)"))
        self.menu_5.setTitle(_translate("MainWindow", "高程计算"))
        self.menu_W.setTitle(_translate("MainWindow", "窗口(W)"))
        self.action_openfile.setText(_translate("MainWindow", "打开(O)"))
        self.action_openmask.setText(_translate("MainWindow", "打开掩码"))
        self.action_cleanOutline.setText(_translate("MainWindow", "清空标记"))
        self.action_openOutline.setText(_translate("MainWindow", "添加轮廓线"))
        self.action_saveImg.setText(_translate("MainWindow", "另存为(A)..."))
        self.action_quit.setText(_translate("MainWindow", "退出(Q)"))
        self.action_cleanImg.setText(_translate("MainWindow", "清空图层"))
        self.action_extractColor.setText(_translate("MainWindow", "取色"))
        self.action_addDem.setText(_translate("MainWindow", "添加高程数据"))
        self.action_slope.setText(_translate("MainWindow", "坡度计算"))
        self.action_curvature.setText(_translate("MainWindow", "曲率计算"))
        self.action_parameters.setText(_translate("MainWindow", "参数设置"))
        self.action_slopeDivide.setText(_translate("MainWindow", "坡度阈值划分"))
import axisTrans_rc
